// <auto-generated />
using DCXAir.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCXAir.API.Migrations
{
    [DbContext(typeof(JourneyDbContext))]
    [Migration("20241120050748_InitialCreateTablesBackend")]
    partial class InitialCreateTablesBackend
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Transport", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlightCarrier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Flight", b =>
                {
                    b.HasOne("DCXAir.API.Domain.Entities.Journey", null)
                        .WithMany("Fligths")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Transport", b =>
                {
                    b.HasOne("DCXAir.API.Domain.Entities.Flight", null)
                        .WithOne("Transport")
                        .HasForeignKey("DCXAir.API.Domain.Entities.Transport", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Flight", b =>
                {
                    b.Navigation("Transport")
                        .IsRequired();
                });

            modelBuilder.Entity("DCXAir.API.Domain.Entities.Journey", b =>
                {
                    b.Navigation("Fligths");
                });
#pragma warning restore 612, 618
        }
    }
}
